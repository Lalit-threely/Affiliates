{"version":3,"file":"index.js","sourceRoot":"","sources":["../../models/index.ts"],"names":[],"mappings":";;;;;;AAAA,yCAAsC;AACtC,uDAA+B;AAE/B,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,gBAAM,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,CAAC;AAEpB,iEAAiE;AACpD,QAAA,SAAS,GAAG,IAAI,qBAAS,CACpC,EAAE,CAAC,QAAkB,EACrB,EAAE,CAAC,IAAc,EACjB,EAAE,CAAC,QAAQ,EACX;IACE,IAAI,EAAE,EAAE,CAAC,IAAI;IACb,OAAO,EAAE,OAAO;IAChB,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI;IACrB,IAAI,EAAE;QACJ,GAAG,EAAE,IAAI,EAAE,4CAA4C;QACvD,GAAG,EAAE,CAAC,EAAE,4CAA4C;QACpD,OAAO,EAAE,KAAK,EAAE,oFAAoF;QACpG,IAAI,EAAE,KAAK,EAAE,mEAAmE;KACjF;IACD,OAAO,EAAE,GAAG,KAAK,aAAa,EAAE,gCAAgC;IAChE,KAAK,EAAE;QACL,GAAG,EAAE,CAAC,EAAE,qCAAqC;KAC9C;CACF,CACF,CAAC","sourcesContent":["import { Sequelize } from 'sequelize';\nimport config from '../config';\n\nconst { env, db } = config;\nconsole.log(db,env);\n\n// Initialize Sequelize without a database to create the database\nexport const sequelize = new Sequelize(\n  db.database as string,\n  db.user as string,\n  db.password,\n  {\n    host: db.host,\n    dialect: 'mysql',\n    port: db.port ?? 3306,\n    pool: {\n      max: 1500, // Maximum number of connections in the pool\n      min: 0, // Minimum number of connections in the pool\n      acquire: 50000, // Maximum time (ms) Sequelize will try to get a connection before throwing an error\n      idle: 10000, // Maximum time (ms) a connection can be idle before being released\n    },\n    logging: env === 'development', // Disable logging in production\n    retry: {\n      max: 3, // Retry a failed query up to 3 times\n    },\n  }\n);"]}