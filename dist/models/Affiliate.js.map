{"version":3,"file":"Affiliate.js","sourceRoot":"","sources":["../../models/Affiliate.ts"],"names":[],"mappings":"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","sourcesContent":["import { Model, DataTypes, Optional } from 'sequelize';\nimport { sequelize } from './index';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport enum AffiliateRole {\n  ADMIN = 'ADMIN',\n  MANAGER = 'MANAGER',\n  AFFILIATE = 'AFFILIATE'\n}\n\nexport type AffiliateStatus = 'active' | 'inactive' | 'suspended';\n\nexport interface AffiliateAttributes {\n  id: string;\n  parent_id: string | null;\n  name: string;\n  email: string;\n  access_code: string;\n  role: AffiliateRole;\n  password: string | null;\n  verified: boolean;\n  wallet_address: string | null;\n  path: string;\n  tag: string | null;\n  status: AffiliateStatus;\n  createdAt?: Date;\n  updatedAt?: Date;\n  deletedAt?: Date | null;\n}\n\nexport interface AffiliateCreationAttributes extends Optional<AffiliateAttributes, 'id' | 'parent_id' | 'password' | 'wallet_address' | 'tag' | 'path'> {}\n\nconst Affiliate = sequelize.define<Model<AffiliateAttributes, AffiliateCreationAttributes>>(\n  'Affiliate',\n  {\n    id: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n    parent_id: {\n      type: DataTypes.UUID,\n      allowNull: true,\n    },\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false,\n    },\n    email: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      unique: true,\n      validate: {\n        isEmail: true,\n      },\n    },\n    access_code: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      unique: true,\n    },\n    role: {\n      type: DataTypes.ENUM(...Object.values(AffiliateRole)),\n      allowNull: false,\n      defaultValue: AffiliateRole.AFFILIATE,\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: true,\n      defaultValue: null,\n    },\n    verified: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false,\n    },\n    wallet_address: {\n      type: DataTypes.STRING,\n      allowNull: true,\n      unique: true,\n    },\n    path: {\n      type: DataTypes.STRING,\n      allowNull: true,\n    },\n    tag: {\n      type: DataTypes.STRING,\n      allowNull: true,\n    },\n    status: {\n      type: DataTypes.ENUM('active', 'inactive', 'suspended'),\n      allowNull: false,\n      defaultValue: 'active',\n    },\n  },\n  {\n    tableName: 'Affiliates',\n    timestamps: true,\n    paranoid: true,\n    indexes: [\n      {\n        unique: true,\n        fields: ['email'],\n      },\n      {\n        fields: ['id'],\n      },\n      {\n        fields: ['access_code'],\n      },\n    ],\n  }\n);\n\n// Hooks\nAffiliate.beforeCreate(async (affiliate: Model<AffiliateAttributes, AffiliateCreationAttributes>, options: any) => {\n  try {\n    const affiliateData = affiliate.get();\n    if (affiliateData.parent_id) {\n      const parent = await Affiliate.findByPk(affiliateData.parent_id);\n      if (!parent) {\n        throw new Error(`Parent affiliate with ID ${affiliateData.parent_id} not found.`);\n      }\n      const parentData = parent.get();\n      affiliate.set('path', `${parentData.path}/${affiliateData.id}`);\n    } else {\n      affiliate.set('path', `/${affiliateData.id}`);\n    }\n  } catch (error) {\n    console.error('Error in beforeCreate hook for Affiliate model:', {\n      affiliate: affiliate.get(),\n      error: error instanceof Error ? error.message : String(error),\n    });\n    throw error;\n  }\n});\n\nexport default Affiliate; "]}